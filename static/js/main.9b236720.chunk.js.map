{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","name","type","className","s","btn","onClick","Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","defaultProps","App","state","handleClick","event","currentTarget","toLowerCase","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","parseInt","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"4SAIe,SAASA,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACvB,wBAEEC,KAAMD,EACNE,KAAK,SACLC,UAAWC,IAAEC,IACbC,QAASR,EALX,SAOGE,GANIA,MCLI,SAASO,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,qCACE,6BAAKD,IACJC,KCJQ,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,mCACE,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,OACZ,gEAAmCC,IAAnC,YCdO,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,IFQbV,EAAQW,aAAe,CACrBV,MAAO,2B,IGLHW,E,4MACJC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,YAAc,SAAAC,GACZ,IAAMrB,EAAOqB,EAAMC,cAActB,KAAKuB,cAEtC,EAAKC,UAAS,SAAAC,GACZ,OAAO,eAAGzB,EAAOyB,EAAUzB,GAAQ,O,EAIvC0B,mBAAqB,WACnB,MAA+B,EAAKP,MACpC,OADA,EAAQT,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBe,gCAAkC,WAChC,IAAQjB,EAAS,EAAKS,MAAdT,KAIR,OAFckB,SAAUlB,EAAO,EAAKgB,qBAAwB,M,4CAK9D,WACE,MAA+BG,KAAKV,MAA5BT,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACfe,EAAwDE,KAAxDF,gCAAiCD,EAAuBG,KAAvBH,mBACzC,OACE,qBAAKxB,UAAU,SAAf,SACE,eAACI,EAAD,CAASC,MAAM,0BAAf,UACE,cAACZ,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBgC,KAAKT,cAExB,cAACd,EAAD,CAASC,MAAM,aAAf,SACGG,EAAO,GAAKC,EAAU,GAAKC,EAAM,EAChC,cAACH,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOa,EACPZ,mBAAoBa,IAGtB,cAACZ,EAAD,CAAcC,QAAQ,iC,GAhDlBc,aAwDHZ,IC1Dfa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,IAAM,gC","file":"static/js/main.9b236720.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nimport s from './FeedbackOptions.module.css';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return options.map(option => (\n    <button\n      key={option}\n      name={option}\n      type=\"button\"\n      className={s.btn}\n      onClick={onLeaveFeedback}\n    >\n      {option}\n    </button>\n  ));\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array,\n  onLeaveFeedback: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Section({ title, children }) {\n  return (\n    <>\n      <h1>{title}</h1>\n      {children}\n    </>\n  );\n}\n\nSection.defaultProps = {\n  title: 'Please leave a feedback',\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <>\n      <ul>\n        <li>Good: {good}</li>\n        <li>Neutral: {neutral}</li>\n        <li>Bad: {bad}</li>\n        <li>Total: {total()}</li>\n        <li>Positive Feedback Percentage: {positivePercentage()}%</li>\n      </ul>\n    </>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.func,\n  positivePercentage: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Notification({ message }) {\n  return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.css';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleClick = event => {\n    const name = event.currentTarget.name.toLowerCase();\n\n    this.setState(prevState => {\n      return { [name]: prevState[name] + 1 };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n\n    let percent = parseInt((good / this.countTotalFeedback()) * 100);\n\n    return percent;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const { countPositiveFeedbackPercentage, countTotalFeedback } = this;\n    return (\n      <div className=\"wraper\">\n        <Section title=\"Please leave a feedback\">\n          <FeedbackOptions\n            options={['Good', 'Neutral', 'Bad']}\n            onLeaveFeedback={this.handleClick}\n          />\n          <Section title=\"Statistics\">\n            {good > 0 || neutral > 0 || bad > 0 ? (\n              <Statistics\n                good={good}\n                neutral={neutral}\n                bad={bad}\n                total={countTotalFeedback}\n                positivePercentage={countPositiveFeedbackPercentage}\n              />\n            ) : (\n              <Notification message=\"No feedback given\" />\n            )}\n          </Section>\n        </Section>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__2fDKR\"};"],"sourceRoot":""}